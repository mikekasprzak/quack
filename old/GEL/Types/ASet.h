// - ------------------------------------------------------------------------------------------ - //
// ASet //
// - ------------------------------------------------------------------------------------------ - //
#ifndef __Geometry_ASet_H__
#define __Geometry_ASet_H__
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
template <class T>
class ASet {
public:
	T a;

public:
	ASet() {
	}

	ASet( T _a ) :
		a( _a )
	{
	}
	
	// - -------------------------------------------------------------------------------------- - //
	inline bool operator == ( const ASet& _Vs ) const {
		return (a == _Vs.a);
	}
	// - -------------------------------------------------------------------------------------- - //
	inline T& operator [] ( const int Index ) {
		return *((&a)+Index);
	}
	// - -------------------------------------------------------------------------------------- - //
	inline const T& operator [] ( const int Index ) const {
		return *((&a)+Index);
	}
	// - -------------------------------------------------------------------------------------- - //
};
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#endif // __Geometry_ASet_H__ //
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#ifndef __GEL_CORE_FILEHANDLE_H__
#define __GEL_CORE_FILEHANDLE_H__
// - ------------------------------------------------------------------------------------------ - //
#include <stdio.h>
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
typedef FILE FileHandle;
// - ------------------------------------------------------------------------------------------ - //


// - ------------------------------------------------------------------------------------------ - //
// Init FileIO //
// - ------------------------------------------------------------------------------------------ - //
inline void init_FileHandle( ) {
	// C Style File IO Requires no special init //
}
// - ------------------------------------------------------------------------------------------ - //
inline void exit_FileHandle( ) {
	// C Style File IO Requires no special shutdown //
}
// - ------------------------------------------------------------------------------------------ - //


// - ------------------------------------------------------------------------------------------ - //
// Opening files //
// - ------------------------------------------------------------------------------------------ - //
inline FileHandle* open_FileHandle( const char* _FileName, const char* _OpenMask = "rb" ) {
	return (FileHandle*)fopen( _FileName, _OpenMask );
}
// - ------------------------------------------------------------------------------------------ - //
inline FileHandle* open_readonly_FileHandle( const char* _FileName ) {
	return (FileHandle*)fopen( _FileName, "rb" );
}
// - ------------------------------------------------------------------------------------------ - //
inline FileHandle* open_writeonly_FileHandle( const char* _FileName ) {
	return (FileHandle*)fopen( _FileName, "wb" );
}
// - ------------------------------------------------------------------------------------------ - //
inline FileHandle* open_appendonly_FileHandle( const char* _FileName ) {
	return (FileHandle*)fopen( _FileName, "ab" );
}
// - ------------------------------------------------------------------------------------------ - //
// Closing Files //
// - ------------------------------------------------------------------------------------------ - //
inline void close_FileHandle( FileHandle* fp ) {
	fclose( fp );
}
// - ------------------------------------------------------------------------------------------ - //


// - ------------------------------------------------------------------------------------------ - //
// Get the size of a file in bytes //
// - ------------------------------------------------------------------------------------------ - //
inline const size_t size_FileHandle( const char* _FileName ) {
	// Open File //
	FileHandle* fp = open_FileHandle( _FileName );
	if ( fp == 0 ) {
		return 0;
	}
	
	// Determine how large file is //
	fseek( (FILE*)fp, 0, SEEK_END );
	size_t Size = ftell( (FILE*)fp );
	
	// Close file //
	close_FileHandle( fp );
	
	// Return data //
	return Size;
}
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
// Get the size of an open file, in bytes //
// - ------------------------------------------------------------------------------------------ - //
inline const size_t size_FileHandle( FileHandle* fp ) {
	size_t Position = ftell( (FILE*)fp );
	
	fseek( (FILE*)fp, 0, SEEK_END );
	size_t Size = ftell( (FILE*)fp );
	fseek( (FILE*)fp, Position, SEEK_SET );
	
	return Size;
}
// - ------------------------------------------------------------------------------------------ - //


// - ------------------------------------------------------------------------------------------ - //
// Read and Write Data to the file //
// - ------------------------------------------------------------------------------------------ - //
inline const size_t read_FileHandle( FileHandle* fp, char* Data, const size_t Size ) {
	return fread( Data, Size, 1, (FILE*)fp );
}
// - ------------------------------------------------------------------------------------------ - //
inline const size_t write_FileHandle( FileHandle* fp, const char* Data, const size_t Size ) {
	return fwrite( Data, Size, 1, (FILE*)fp );
}
// - ------------------------------------------------------------------------------------------ - //


// - ------------------------------------------------------------------------------------------ - //
#endif // __GEL_CORE_FILEHANDLE_H__ //
// - ------------------------------------------------------------------------------------------ - //

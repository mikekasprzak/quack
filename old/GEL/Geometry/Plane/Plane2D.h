// - ------------------------------------------------------------------------------------------ - //
// Plane2D //
// - ------------------------------------------------------------------------------------------ - //
#ifndef __Geometry_Plane2D_H__
#define __Geometry_Plane2D_H__
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#include <Math/Vector.h>
#include <Geometry/Rect.h>
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
class Plane2D {
public:
	Vector2D Point;
	Vector2D Normal;
public:
	
	

public:	
	inline const bool operator == ( const Vector2D& v ) const {
		return (Normal * ( Point - v )) >= Real::Zero;
	}
	
	inline const Real Test( const Vector2D& v ) const {
		Real Product = (Normal * ( Point - v ));
		
		if ( Product.IsZero() ) {
			return Real::Zero;
		}
		else if ( Product > Real::Zero ) {
			return Real::One;
		}
		else {
			return -Real::One;
		}
	}
};
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#endif // __Geometry_Plane2D_H__ //
// - ------------------------------------------------------------------------------------------ - //

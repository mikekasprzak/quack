// - ------------------------------------------------------------------------------------------ - //
// RGBASet //
// - ------------------------------------------------------------------------------------------ - //
#ifndef __Geometry_RGBASet_H__
#define __Geometry_RGBASet_H__
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
template <class T>
class RGBASet {
public:
	T r, g, b, a;

public:
	RGBASet() {
	}

	RGBASet( T _r, T _g, T _b, T _a ) :
		r( _r ),
		g( _g ),
		b( _b ),
		a( _a )
	{
	}
	
	// - -------------------------------------------------------------------------------------- - //
	inline bool operator == ( const RGBASet& _Vs ) const {
		if ( (r == _Vs.r) )
			if ( (g == _Vs.g) )
				if ( (b == _Vs.b) )
					return (a == _Vs.a);
		return false;
	}
	// - -------------------------------------------------------------------------------------- - //
	inline T& operator [] ( const int Index ) {
		return *((&r)+Index);
	}
	// - -------------------------------------------------------------------------------------- - //
	inline const T& operator [] ( const int Index ) const {
		return *((&r)+Index);
	}
	// - -------------------------------------------------------------------------------------- - //
};
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#endif // __Geometry_RGBASet_H__ //
// - ------------------------------------------------------------------------------------------ - //

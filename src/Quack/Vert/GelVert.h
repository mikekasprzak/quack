// - ------------------------------------------------------------------------------------------ - //
#ifndef __GEL_VERT_GELVERT_H__
#define __GEL_VERT_GELVERT_H__
// - ------------------------------------------------------------------------------------------ - //
#include <Lib/Lib.h>
#include <Graphics/Graphics.h>
#include <vector>
// - ------------------------------------------------------------------------------------------ - //
// GelVert??   - Array of elements
// GelVertex?? - Single element
// GelVert     - Base Template of all GelVert?? types
// - ------------------------------------------------------------------------------------------ - //
template<typename T>
class GelVert {
	typedef GelVert thistype;
	std::vector<T> Data;	
public:
	typedef T Type;
	
	inline GelVert( st _Size = 0 ) :
		Data(_Size)
	{
	}
	
	inline T& operator [] ( st Index ) {
		return Data[Index];
	}
	inline const T& operator [] ( st Index ) const {
		return Data[Index];
	}

public:
	st Size() const {
		return Data.size();
	}
};
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
// GUIDE: //
// 1 -- 1D Position (Real)
// 2 -- 2D Position (Vector2D)
// 3 -- 3D Position (Vector3D)
// 4 -- 4D Position (Vector4D)
// N -- Normal (same as Position)
// U -- UV Coordinate (GelUV)
// C -- Color (GelColor)
// R -- Radius (Real)
// - ------------------------------------------------------------------------------------------ - //
// TODO: //
// UU - Dual UV Coordinates
// CC - Dual Colors
// D? - Data, where ? is a number from 1-4 (Real to Vector4D)
// - ------------------------------------------------------------------------------------------ - //
/*
// - ------------------------------------------------------------------------------------------ - //
#define __GelVertex_START( _sym ) \
struct GelVertex ## _sym {
// - ------------------------------------------------------------------------------------------ - //
#define __GelVertex_END( _sym ) \
}; \
typedef GelVert<GelVertex ## _sym> GelVert ## _sym;
// - ------------------------------------------------------------------------------------------ - //


// - ------------------------------------------------------------------------------------------ - //
// 1D Versions //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1 )
	Real Pos;
__GelVertex_END( 1 )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1N )
	Real Pos;
	Real Normal;
__GelVertex_END( 1N )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1U )
	Real Pos;
	GelUV UV;
__GelVertex_END( 1U )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1C )
	Real Pos;
	GelColor Color;
__GelVertex_END( 1C )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1R )
	Real Pos;
	Real Radius;
__GelVertex_END( 1R )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1NU )
	Real Pos;
	Real Normal;
	GelUV UV;
__GelVertex_END( 1NU )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1NC )
	Real Pos;
	Real Normal;
	GelColor Color;
__GelVertex_END( 1NC )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1NR )
	Real Pos;
	Real Normal;
	Real Radius;
__GelVertex_END( 1NR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1UC )
	Real Pos;
	GelUV UV;
	GelColor Color;
__GelVertex_END( 1UC )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1UR )
	Real Pos;
	GelUV UV;
	Real Radius;
__GelVertex_END( 1UR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1CR )
	Real Pos;
	GelColor Color;
	Real Radius;
__GelVertex_END( 1CR )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1NUC )
	Real Pos;
	Real Normal;
	GelUV UV;
	GelColor Color;
__GelVertex_END( 1NUC )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1NUR )
	Real Pos;
	Real Normal;
	GelUV UV;
	Real Radius;
__GelVertex_END( 1NUR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1NCR )
	Real Pos;
	Real Normal;
	GelColor Color;
	Real Radius;
__GelVertex_END( 1NCR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1UCR )
	Real Pos;
	GelUV UV;
	GelColor Color;
	Real Radius;
__GelVertex_END( 1UCR )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 1NUCR )
	Real Pos;
	Real Normal;
	GelUV UV;
	GelColor Color;
	Real Radius;
__GelVertex_END( 1NUCR )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //


// - ------------------------------------------------------------------------------------------ - //
// 2D Versions //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2 )
	Vector2D Pos;
__GelVertex_END( 2 )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2N )
	Vector2D Pos;
	Vector2D Normal;
__GelVertex_END( 2N )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2U )
	Vector2D Pos;
	GelUV UV;
__GelVertex_END( 2U )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2C )
	Vector2D Pos;
	GelColor Color;
__GelVertex_END( 2C )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2R )
	Vector2D Pos;
	Real Radius;
__GelVertex_END( 2R )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2NU )
	Vector2D Pos;
	Vector2D Normal;
	GelUV UV;
__GelVertex_END( 2NU )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2NC )
	Vector2D Pos;
	Vector2D Normal;
	GelColor Color;
__GelVertex_END( 2NC )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2NR )
	Vector2D Pos;
	Vector2D Normal;
	Real Radius;
__GelVertex_END( 2NR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2UC )
	Vector2D Pos;
	GelUV UV;
	GelColor Color;
__GelVertex_END( 2UC )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2UR )
	Vector2D Pos;
	GelUV UV;
	Real Radius;
__GelVertex_END( 2UR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2CR )
	Vector2D Pos;
	GelColor Color;
	Real Radius;
__GelVertex_END( 2CR )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2NUC )
	Vector2D Pos;
	Vector2D Normal;
	GelUV UV;
	GelColor Color;
__GelVertex_END( 2NUC )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2NUR )
	Vector2D Pos;
	Vector2D Normal;
	GelUV UV;
	Real Radius;
__GelVertex_END( 2NUR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2NCR )
	Vector2D Pos;
	Vector2D Normal;
	GelColor Color;
	Real Radius;
__GelVertex_END( 2NCR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2UCR )
	Vector2D Pos;
	GelUV UV;
	GelColor Color;
	Real Radius;
__GelVertex_END( 2UCR )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 2NUCR )
	Vector2D Pos;
	Vector2D Normal;
	GelUV UV;
	GelColor Color;
	Real Radius;
__GelVertex_END( 2NUCR )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //


// - ------------------------------------------------------------------------------------------ - //
// 3D Versions //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3 )
	Vector3D Pos;
__GelVertex_END( 3 )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3N )
	Vector3D Pos;
	Vector3D Normal;
__GelVertex_END( 3N )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3U )
	Vector3D Pos;
	GelUV UV;
__GelVertex_END( 3U )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3C )
	Vector3D Pos;
	GelColor Color;
__GelVertex_END( 3C )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3R )
	Vector3D Pos;
	Real Radius;
__GelVertex_END( 3R )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3NU )
	Vector3D Pos;
	Vector3D Normal;
	GelUV UV;
__GelVertex_END( 3NU )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3NC )
	Vector3D Pos;
	Vector3D Normal;
	GelColor Color;
__GelVertex_END( 3NC )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3NR )
	Vector3D Pos;
	Vector3D Normal;
	Real Radius;
__GelVertex_END( 3NR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3UC )
	Vector3D Pos;
	GelUV UV;
	GelColor Color;
__GelVertex_END( 3UC )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3UR )
	Vector3D Pos;
	GelUV UV;
	Real Radius;
__GelVertex_END( 3UR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3CR )
	Vector3D Pos;
	GelColor Color;
	Real Radius;
__GelVertex_END( 3CR )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3NUC )
	Vector3D Pos;
	Vector3D Normal;
	GelUV UV;
	GelColor Color;
__GelVertex_END( 3NUC )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3NUR )
	Vector3D Pos;
	Vector3D Normal;
	GelUV UV;
	Real Radius;
__GelVertex_END( 3NUR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3NCR )
	Vector3D Pos;
	Vector3D Normal;
	GelColor Color;
	Real Radius;
__GelVertex_END( 3NCR )
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3UCR )
	Vector3D Pos;
	GelUV UV;
	GelColor Color;
	Real Radius;
__GelVertex_END( 3UCR )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //
__GelVertex_START( 3NUCR )
	Vector3D Pos;
	Vector3D Normal;
	GelUV UV;
	GelColor Color;
	Real Radius;
__GelVertex_END( 3NUCR )
// - ------------------------------------------------------------------------------------------ - //
// - ------------------------------------------------------------------------------------------ - //

#undef __GelVertex_START
#undef __GelVertex_END
*/

// - ------------------------------------------------------------------------------------------ - //
#define CAT(a, ...) PRIMITIVE_CAT(a, __VA_ARGS__)
#define PRIMITIVE_CAT(a, ...) a ## __VA_ARGS__
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#define __GelVertex_START(_num,_sym) \
struct CAT(GelVertex,CAT(_num,_sym)) {
// - ------------------------------------------------------------------------------------------ - //
#define __GelVertex_END(_num,_sym) \
}; \
typedef GelVert<CAT(GelVertex,CAT(_num,_sym))> CAT(GelVert,CAT(_num,_sym));
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#define __GelVertex_TYPE Real
#define __GelVertex_NUMBER 1
#include "GelVert_GelVertex.def.h"
#undef __GelVertex_NUMBER
#undef __GelVertex_TYPE
// - ------------------------------------------------------------------------------------------ - //
#define __GelVertex_TYPE Vector2D
#define __GelVertex_NUMBER 2
#include "GelVert_GelVertex.def.h"
#undef __GelVertex_NUMBER
#undef __GelVertex_TYPE
// - ------------------------------------------------------------------------------------------ - //
#define __GelVertex_TYPE Vector3D
#define __GelVertex_NUMBER 3
#include "GelVert_GelVertex.def.h"
#undef __GelVertex_NUMBER
#undef __GelVertex_TYPE
// - ------------------------------------------------------------------------------------------ - //
#define __GelVertex_TYPE Vector4D
#define __GelVertex_NUMBER 4
#include "GelVert_GelVertex.def.h"
#undef __GelVertex_NUMBER
#undef __GelVertex_TYPE
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#undef __GelVertex_START
#undef __GelVertex_END
// - ------------------------------------------------------------------------------------------ - //

// - ------------------------------------------------------------------------------------------ - //
#endif // __GEL_VERT_GELVERT_H__ //
// - ------------------------------------------------------------------------------------------ - //

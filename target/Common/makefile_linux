# - ------------------------------------------------------------------------ - #
CPUFLAGS			:=	-msse2 -mmmx -mfpmath=sse -ftree-vectorize
# - ------------------------------------------------------------------------ - #
# Compiler and Linker Flags (specific to this target) #
CFLAGS				+=	-I /usr/local/include -I /usr/local/ssl/include $(CPUFLAGS)
CPPFLAGS			+=	-I /usr/local/include -I /usr/local/ssl/include $(CPUFLAGS)
LDFLAGS				+=	-L /usr/local/lib -L /usr/local/ssl/lib
# - ------------------------------------------------------------------------ - #
DEFINES				+=	USES_UNIX USES_DESKTOP USES_GCC NO_TWEAKVALUE
# - ------------------------------------------------------------------------ - #
LIBRARIES			+=	
# - ------------------------------------------------------------------------ - #
# Release Build Only #
ifdef NDEBUG
LDFLAGS				+=	
endif
# - ------------------------------------------------------------------------ - #
# File extension for the Binary (.exe on Windows, .i686 .x86_64 on Linux) #
BINARY_SUFFIX		:=	
# - ------------------------------------------------------------------------ - #
# Platform Specific Target Influencing Defines #
USES_UNIX			:=	true		# OS #
USES_DESKTOP		:=	true		# OS MODE #
USES_GCC			:=	true		# Compiler Suite (For completeness) #
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
# Graphical Applications on Windows use SDL2 and OpenGL. This decides which GL #
# - ------------------------------------------------------------------------ - #
ifdef USES_GRAPHICS				# Has Graphics #
# - ------------------------------------------------------------------------ - #
USES_SDL2			:=	true	# Uses Simple Directmedia Layer 2 API #
USES_OPENGL			:=	true	# Uses one of the "OpenGL Family" of APIs #
#USES_SDLMIXER		:=	true	# Use SDL's Standard Addon Audio Library #
# - ------------------------------------------------------------------------ - #
ifdef USES_SHADERS				# Graphics with Shaders #
ifdef USES_BATCHING				# Graphics with Shaders and Advanced Batching #
# - ------------------------------------------------------------------------ - #
USES_OPENGL3		:=	true	# Use OpenGL3 with its advanced batching #
USES_OPENGL2		:=	true	# GL3 is backwards compatible, so GL2 is ok #
# - ------------------------------------------------------------------------ - #
else  # !USES_BATCHING #
# - ------------------------------------------------------------------------ - #
USES_OPENGL2		:=	true	# Use OpenGL2 with its standard batching (VBO) #
# - ------------------------------------------------------------------------ - #
endif # USES_BATCHING #
else  # !USES_SHADERS #
# - ------------------------------------------------------------------------ - #
USES_OPENGL1		:=	true	# Use OpenGL1 (GL without shaders) #
# - ------------------------------------------------------------------------ - #
endif # USES_SHADERS #
# - ------------------------------------------------------------------------ - #
endif # USES_GRAPHICS #
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
include target/Common/common_libraries
# - ------------------------------------------------------------------------ - #
# Finally, include the standard makefile body #
include target/Common/common_makefile
# - ------------------------------------------------------------------------ - #

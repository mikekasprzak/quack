# - ------------------------------------------------------------------------ - #
# Platform Specific Target Influencing Defines #
USES_ANDROID		:=	true		# OS #
USES_MOBILE			:=	true		# OS MODE #
USES_GCC			:=	true		# Compiler Suite (For completeness) #
# - ------------------------------------------------------------------------ - #
USES_LOGCAT			:=	true		# FileLog Output to use #
USES_NO_LOG_NEWLINE	:=	true		# Don't output extra newline (\n) in logs #
# - ------------------------------------------------------------------------ - #
DEFINES				+=	USES_ANDROID USES_MOBILE USES_GCC
DEFINES				+=	USES_LOGCAT USES_NO_LOG_NEWLINE
# - ------------------------------------------------------------------------ - #


# - ------------------------------------------------------------------------ - #
CPUFLAGS			:=	
# - ------------------------------------------------------------------------ - #
# Compiler and Linker Flags (specific to this target) #
CFLAGS				+=	$(CPUFLAGS) #-I /usr/local/include 
CPPFLAGS			+=	$(CPUFLAGS) #-I /usr/local/include
LDFLAGS				+=	#-L /usr/local/lib 
# - ------------------------------------------------------------------------ - #
LIBRARIES			+=	
# - ------------------------------------------------------------------------ - #
# Release Build Only #
ifdef NDEBUG
LDFLAGS				+=	
endif
# - ------------------------------------------------------------------------ - #
# File extension for the Binary (.exe on Windows, .i686 .x86_64 on Linux) #
BINARY_SUFFIX		:=	.so
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
# Graphical Applications on Windows use SDL2 and OpenGL. This decides which GL #
# - ------------------------------------------------------------------------ - #
ifdef USES_GRAPHICS				# Has Graphics #
# - ------------------------------------------------------------------------ - #
USES_SDL2			:=	true	# Uses Simple Directmedia Layer 2 API #
USES_OPENGL			:=	true	# Uses one of the "OpenGL Family" of APIs #
USES_OPENGL_ES		:=	true	# Uses one of the OpenGL ES APIs #
# - ------------------------------------------------------------------------ - #
ifdef USES_SHADERS				# Graphics with Shaders #
ifdef USES_BATCHING				# Graphics with Shaders and Advanced Batching #
# - ------------------------------------------------------------------------ - #
USES_OPENGL_ES3		:=	true	# Use OpenGL ES3 with its advanced batching #
USES_OPENGL_ES2		:=	true	# GL3 is backwards compatible, so GL2 is ok #
# - ------------------------------------------------------------------------ - #
else  # !USES_BATCHING #
# - ------------------------------------------------------------------------ - #
USES_OPENGL_ES2		:=	true	# Use OpenGL ES2 with standard batching (VBO) #
# - ------------------------------------------------------------------------ - #
endif # USES_BATCHING #
else  # !USES_SHADERS #
# - ------------------------------------------------------------------------ - #
USES_OPENGL_ES1		:=	true	# Use OpenGL ES1 (GLES without shaders) #
# - ------------------------------------------------------------------------ - #
endif # USES_SHADERS #
# - ------------------------------------------------------------------------ - #
endif # USES_GRAPHICS #
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
ifdef USES_AUDIO
# - ------------------------------------------------------------------------ - #
#USES_SDLMIXER		:=	true	# Use SDL's Standard Addon Audio Library #
# - ------------------------------------------------------------------------ - #
endif # USES_AUDIO #
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
include target/Common/common_libraries
# - ------------------------------------------------------------------------ - #
include target/Common/common_makefile
# - ------------------------------------------------------------------------ - #
include target/Common/common_generate_makefile
# - ------------------------------------------------------------------------ - #

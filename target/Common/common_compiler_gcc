# - ------------------------------------------------------------------------ - #
CC					:=	$(GCC_PREFIX)gcc
CXX					:=	$(GCC_PREFIX)g++
LD					:=	$(GCC_PREFIX)ld
# - ------------------------------------------------------------------------ - #


# - ------------------------------------------------------------------------ - #
# Release Build Only #
# - ------------------------------------------------------------------------ - #
ifdef NDEBUG
DEFINES				+=	NDEBUG
LDFLAGS				+=	-s
# - ------------------------------------------------------------------------ - #
else # !NDEBUG #
# - ------------------------------------------------------------------------ - #
DEFINES				+=	
CFLAGS				+=	-g
CPPFLAGS			+=	-g
# - ------------------------------------------------------------------------ - #
endif # NDEBUG #
# - ------------------------------------------------------------------------ - #


# - ------------------------------------------------------------------------ - #
ifdef OSIZE # Optimized for Size #
# - ------------------------------------------------------------------------ - #
CFLAGS				+=	-Os
CPPFLAGS			+=	-Os
# - ------------------------------------------------------------------------ - #
else ifdef O3 # Optimized for Space #
# - ------------------------------------------------------------------------ - #
CFLAGS				+=	-O3
CPPFLAGS			+=	-O3
# - ------------------------------------------------------------------------ - #
else ifdef O0 # No Optimizations #
# - ------------------------------------------------------------------------ - #
CFLAGS				+=	-O0
CPPFLAGS			+=	-O0
# - ------------------------------------------------------------------------ - #
else # Default #
# - ------------------------------------------------------------------------ - #
CFLAGS				+=	-O0
CPPFLAGS			+=	-O0
# - ------------------------------------------------------------------------ - #
endif # Optimizations #
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
ifdef USES_CPP11		# C++11 Support (Disabled by default) #
# - ------------------------------------------------------------------------ - #
CPPFLAGS			+=	--std=gnu++0x 
# - ------------------------------------------------------------------------ - #
endif # USES_CPP11 #
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
# Compiler and Linker Flags (NOTE: Optimizations are in common_tools) #
CFLAGS				+=	-fno-strict-aliasing
# - ------------------------------------------------------------------------ - #
CPPFLAGS			+=	-fno-rtti -fno-strict-aliasing
# - ------------------------------------------------------------------------ - #
LDFLAGS				+=	
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
ifdef USES_WARNINGS		# Extra Warnings #
# - ------------------------------------------------------------------------ - #
CPPFLAGS			+=	-Wshadow -Wlogical-op \
						-Wmissing-braces -Wmissing-include-dirs \
						-Wall -Wno-unknown-pragmas -Wno-unused-parameter \
						-Wextra -Wno-ignored-qualifiers \
#						-Winline -Wundef -Wcast-qual -Wconversion -Wpadded \
#						-Wdouble-promotion -Wfloat-equal \
# - ------------------------------------------------------------------------ - #
endif # USES_WARNINGS #
# - ------------------------------------------------------------------------ - #


# - ------------------------------------------------------------------------ - #
# Link the executable #
# - ------------------------------------------------------------------------ - #
$(TARGET): $(TARGET_STUBS) $(FOLDER_STUBS) $(H_FILES) $(.O_FILES) $(OTHER_FILES_DEP) startcache
ifneq ($(strip $(COPY_FILES)),)
	cp -t $(TARGET_DIR) $(COPY_FILES)
endif
	$(CXX) $(DEFINES) $(LDFLAGS) $(OTHER_O_FILES) $(.O_FILES) -o $@ $(LIBRARIES)
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
# C/C++ Compile stages, with dependency generation #
# - ------------------------------------------------------------------------ - #
obj/$(TARGET_NAME)/%.c.o: %.c
	$(CC) $(DEFINES) $(INCLUDES) $(CFLAGS) -MMD -MF $@.d -c $< -o $@
# - ------------------------------------------------------------------------ - #
obj/$(TARGET_NAME)/%.cpp.o: %.cpp
	$(CXX) $(DEFINES) $(INCLUDES) $(CPPFLAGS) -MMD -MF $@.d -c $< -o $@
# - ------------------------------------------------------------------------ - #

# - ------------------------------------------------------------------------ - #
# The below 2 cause a conflict with the -include in common_makefile. #
# - ------------------------------------------------------------------------ - #
#obj/$(TARGET_NAME)/%.c.o.d: %.c
#	$(CC) $(DEFINES) $(INCLUDES) $(CFLAGS) -MMD -MF $@ -E $< -o $@.pp
# - ------------------------------------------------------------------------ - #
#obj/$(TARGET_NAME)/%.cpp.o.d: %.cpp
#	$(CXX) $(DEFINES) $(INCLUDES) $(CPPFLAGS) -MMD -MF $@ -E $< -o $@.pp
# - ------------------------------------------------------------------------ - #
